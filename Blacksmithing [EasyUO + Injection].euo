set %containerId NRUFKMD
set %trashCanId GJYVJMD

set %hammer TLH_OLH
set %dagger TSF_WSF

msg $,waitmenu 'Blacksmithing' 'Weapons'$
msg $,cancelmenu$
msg $,automenu 'Blacksmithing' 'Weapons'$
msg $,automenu 'Weapons' 'dagger'$

wait 100

loop:
findItem %hammer C_ , #charId
if ( #findKind = -1 )
{
    findItem %hammer C_ , #backPackId
    if ( #findKind = -1 )
        pause
}
set #lObjectId #findId
findItem RMK C_ , #backPackId
if ( #findStack < 100 )
{
    gosub trash %dagger
    gosub grabIngots
    goto loop
}
set #lTargetId #findId
set #lTargetKind 1
event macro 17
target
event macro 22
wait 40
set %_journal #jIndex + 1
set %timeout #scnt + 10
_journal:
if ( %timeout < #scnt )
    goto loop
if ( %_journal > #jIndex )
    goto _journal
scanJournal %_journal
if ( you_fail_to_complete_the_item in #journal )
    goto loop
if ( you_put_the in #journal )
    goto loop
set %_journal %_journal + 1
goto _journal

sub grabIngots
gosub openContainer %containerId
ignoreItem reset
_grabIngots:
findItem RMK C_ , %containerId
if ( #findCol <> 0 )
{
    ignoreItem #findId
    goto _grabIngots
}
if ( #findKind = -1 || #findStack < 200 )
    pause
exevent drag #findId 200
exevent dropC #backPackId
wait 10
return

; gosub openContainer [containerId]
sub openContainer
set %_containerId %1
_openContainer:
set #lObjectId %_containerId
event macro 17
set %_timeout #scnt + 10
_waitOpenContainer:
if ( %_timeout < #scnt )
    goto _openContainer
if ( #contId = %_containerId )
   return
goto _openContainer

sub trash
set %_trashId %1
set %_trashed 0
_trash:
findItem %_trashId C_ , #backPackId
if ( #findKind = -1 )
    return
exevent drag #findId 1
exevent dropC %trashCanId
wait 10
set %_trashed %_trashed + 1
if ( %_trashed >= 10 )
    goto _emptyTrash
goto _trash
_emptyTrash:
set #lTargetId %trashCanId
set #lTargetKind 1
msg $take out the trash$
target
event macro 22
set %_trashed 0
goto _trash
